<?xml version="1.0" ?>

<class terminator="true">

<namespace>NVL_AI</namespace>
<solution>VanillaGPLib</solution>
<name>ProblemLoader</name>
<description>Defines the functionality for loading the details associated with the given problem</description>

<includes>
    <include name="iostream" namespace="std" local="false" />
    <include name="opencv2/opencv.hpp" namespace="cv" local="false" />
    <include name="NVLib/FileUtils.h" local="false" />
    <include name="NVLib/ARFF/ARFFReader.h" local="false" />
    <include name="CodeDash." local="true" />
</includes>

<variables>
    <variable type="int" name="id" code="10" />
    <variable type="string" name="code" code="10" />
    <variable type="string" name="name" code="10" />
    <variable type="string" name="description" code="10" />
    <variable type="string" name="file" code="10" />
    <variable type="Mat" name="data" code="10" />
</variables>

<constructors>

    <!-- Main Constructor -->
    <constructor type="custom" inline="false">
        <parameter type="const string&" name="problemCode" description="The code of the problem we are processing" />
        <parameter type="const string&" name="dataFile" description="The path to the associated data file" />
    </constructor>

</constructors>

<methods>

    <!-- Load the given problem -->
    <method section="Loader" access="public" return="void" name="Load" description="Load problem details" inline="false">
        <parameter type="CodeDash *" name="codeDash" description="Link to the code data database" />
    </method>    

</methods>

<tests>
    <test name="invalid_problem" description="Handles invalid problem loading" exception="true" />
    <test name="missing_file" description="Handles the problem that the data file is missing" exception="true" />
    <test name="invalid_hash" description="Handles the problem that the hashcode of the problem is missing" exception="true" />
    <test name="valid_load" description="Defines a normal loading of the functionality" excpetion="false" />
</tests> 

</class>