<?xml version="1.0" ?>

<class base="LeafNode">

<namespace>NVL_AI</namespace>
<solution>MathExpLib</solution>
<name>ConstantNode</name>
<description>A node that wrappers a constant</description>

<includes>
    <include name="sstream" namespace="std" local="false" />
    <include name="vector" namespace="std" local="false" />
    <include name="iostream" namespace="std" local="false" />
    <include name="LeafNode.h" local="true" />
</includes>

<variables>
    <variable type="double" name="value" code="10" />
</variables>

<constructors>

    <!-- Main Constructor -->
    <constructor type="custom" inline="false">
        <parameter type="int" name="value" description="The value representing the constant" />
    </constructor>

</constructors>

<methods>

    <!-- Evaluate the Node-->
    <method section="Methods" modifiers="virtual" access="public" return="double" name="Evaluate" description="Evaluate this node (along with children)" inline="false">
        <parameter type="const vector<double>&" name="params" description="The input parameters associated with the application" />
    </method>

    <!-- Generate the `source code` associated with this part -->
    <method section="Methods" modifiers="virtual" access="public" return="string" name="GetCode" description="Generate source code for this node (including children)" inline="false" />

    <!-- Get node name -->
    <method section="Methods" modifiers="virtual" access="public" return="string" name="GetType" description="Retrieve the name assiociated with the node" inline="false" />

</methods>

<tests>
    <test name="node_name" description="Test retrieval of the node name" exception="false" />
    <test name="evaluate" description="Confirm the evaluation functionality" exception="false" />
    <test name="code_generation" description="Test " exception="false" />
</tests> 

</class>